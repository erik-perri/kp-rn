import HmacBlockStream, {
  UINT64_MAX,
} from '../../../src/lib/streams/HmacBlockStream';
import sampleAes256AesKdfKdbx4 from '../../../__fixtures__/sample-aes256-aes-kdf-kdbx4';

describe('HmacBlockStream', () => {
  it('getHmacKey works as expected', async () => {
    const result = await HmacBlockStream.getHmacKey(
      UINT64_MAX,
      sampleAes256AesKdfKdbx4.hmacKey,
    );

    expect(result).toEqualUint8Array(
      Uint8Array.from([
        0xf9, 0x90, 0x33, 0xd1, 0xc2, 0x8a, 0xb2, 0x1d, 0xc8, 0x00, 0x91, 0x41,
        0xea, 0xfb, 0xb1, 0x9e, 0x24, 0x33, 0x05, 0xb5, 0xf1, 0x49, 0x84, 0x94,
        0x27, 0x0f, 0x88, 0xcc, 0xbc, 0x14, 0x44, 0xea, 0xf6, 0xf8, 0x22, 0x17,
        0x29, 0x50, 0x1f, 0x62, 0x8f, 0x6c, 0x7f, 0xcf, 0xab, 0x7c, 0xbe, 0xc3,
        0x4b, 0x45, 0x3d, 0x1d, 0xc2, 0xf3, 0x7c, 0x68, 0x31, 0x99, 0x67, 0x71,
        0x88, 0xfb, 0x31, 0xa3,
      ]),
    );
  });
});
